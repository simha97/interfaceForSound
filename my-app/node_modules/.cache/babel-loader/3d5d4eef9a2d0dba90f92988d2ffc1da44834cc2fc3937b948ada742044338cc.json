{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\SimonsProjects\\\\interfaceForSound\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sentences = [\"Clear your mind\", \"You did well today\", \"Think of something peaceful\", \"\"\n// Additional sentences...\n];\nfunction App() {\n  _s();\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [phase, setPhase] = useState(\"fade-in\");\n  const [showButtons, setShowButtons] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [feeling, setFeeling] = useState(\"\");\n  const audioRef = useRef(new Audio(\"/Chimes.mp3\"));\n  useEffect(() => {\n    let timeoutId;\n    if (currentSentenceIndex < sentences.length - 1 && showButtons) {\n      if (phase === \"fade-in\") {\n        timeoutId = setTimeout(() => setPhase(\"visible\"), 2000);\n      } else if (phase === \"visible\") {\n        timeoutId = setTimeout(() => setPhase(\"fade-out\"), 2000);\n      } else if (phase === \"fade-out\") {\n        timeoutId = setTimeout(() => {\n          setCurrentSentenceIndex(prevIndex => prevIndex + 1);\n          setPhase(\"fade-in\");\n        }, 2000);\n      }\n    } else if (showButtons) {\n      // Assuming the audio should play after showing all sentences\n      playAudio();\n    }\n    return () => clearTimeout(timeoutId);\n  }, [phase, currentSentenceIndex, showButtons]);\n  useEffect(() => {\n    audioRef.current.loop = true;\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      name: userName,\n      feeling: feeling,\n      date: new Date().toISOString()\n    };\n    // Implement the fetch call to send userData to your backend here\n    console.log(userData);\n    setShowButtons(true); // Proceed to show sentences and play audio after submitting\n  };\n  if (!showButtons) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your name\",\n          value: userName,\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"happy\",\n            name: \"feeling\",\n            value: \"Happy\",\n            onChange: e => setFeeling(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"happy\",\n            children: \"Happy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"stressed\",\n            name: \"feeling\",\n            value: \"Stressed\",\n            onChange: e => setFeeling(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"stressed\",\n            children: \"Stressed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentSentenceIndex < sentences.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sentence ${phase}`,\n      children: sentences[currentSentenceIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), showButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fade-in-button\",\n        onClick: playAudio,\n        children: \"Play Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fade-in-button\",\n        onClick: stopAudio,\n        children: \"Stop Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"URaG7GSXYewfIATwJI/lmmoZwWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","sentences","App","_s","currentSentenceIndex","setCurrentSentenceIndex","phase","setPhase","showButtons","setShowButtons","userName","setUserName","feeling","setFeeling","audioRef","Audio","timeoutId","length","setTimeout","prevIndex","playAudio","clearTimeout","current","loop","handleSubmit","e","preventDefault","userData","name","date","Date","toISOString","console","log","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","onClick","stopAudio","_c","$RefreshReg$"],"sources":["C:/Users/simon/SimonsProjects/interfaceForSound/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst sentences = [\r\n  \"Clear your mind\",\r\n  \"You did well today\",\r\n  \"Think of something peaceful\",\r\n  \"\",\r\n  // Additional sentences...\r\n];\r\n\r\nfunction App() {\r\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\r\n  const [phase, setPhase] = useState(\"fade-in\");\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [feeling, setFeeling] = useState(\"\");\r\n  const audioRef = useRef(new Audio(\"/Chimes.mp3\"));\r\n\r\n  useEffect(() => {\r\n    let timeoutId;\r\n    if (currentSentenceIndex < sentences.length - 1 && showButtons) {\r\n      if (phase === \"fade-in\") {\r\n        timeoutId = setTimeout(() => setPhase(\"visible\"), 2000);\r\n      } else if (phase === \"visible\") {\r\n        timeoutId = setTimeout(() => setPhase(\"fade-out\"), 2000);\r\n      } else if (phase === \"fade-out\") {\r\n        timeoutId = setTimeout(() => {\r\n          setCurrentSentenceIndex((prevIndex) => prevIndex + 1);\r\n          setPhase(\"fade-in\");\r\n        }, 2000);\r\n      }\r\n    } else if (showButtons) {\r\n      // Assuming the audio should play after showing all sentences\r\n      playAudio();\r\n    }\r\n    return () => clearTimeout(timeoutId);\r\n  }, [phase, currentSentenceIndex, showButtons]);\r\n\r\n  useEffect(() => {\r\n    audioRef.current.loop = true;\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      name: userName,\r\n      feeling: feeling,\r\n      date: new Date().toISOString(),\r\n    };\r\n    // Implement the fetch call to send userData to your backend here\r\n    console.log(userData);\r\n    setShowButtons(true); // Proceed to show sentences and play audio after submitting\r\n  };\r\n\r\n  if (!showButtons) {\r\n    return (\r\n      <div className=\"App\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your name\"\r\n            value={userName}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"happy\"\r\n              name=\"feeling\"\r\n              value=\"Happy\"\r\n              onChange={(e) => setFeeling(e.target.value)}\r\n            />\r\n            <label htmlFor=\"happy\">Happy</label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"stressed\"\r\n              name=\"feeling\"\r\n              value=\"Stressed\"\r\n              onChange={(e) => setFeeling(e.target.value)}\r\n            />\r\n            <label htmlFor=\"stressed\">Stressed</label>\r\n            {/* Add more radio buttons for other feelings */}\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {currentSentenceIndex < sentences.length && (\r\n        <div className={`sentence ${phase}`}>\r\n          {sentences[currentSentenceIndex]}\r\n        </div>\r\n      )}\r\n      {showButtons && (\r\n        <div>\r\n          <button className=\"fade-in-button\" onClick={playAudio}>\r\n            Play Sound\r\n          </button>\r\n          <button className=\"fade-in-button\" onClick={stopAudio}>\r\n            Stop Sound\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}